//写函数
int get_max(int x, int y)
{
    if (x>y) {
    return x;
    }else {
    return y;
    }
}
//交换函数(指针)
void swap(int* pa, int* pb )
{
    int tmp = 0;
    tmp = *pa;
    *pa = *pb;
    *pb = tmp;
}
//函数判断是不是素数
#include "math.h"
int is_prime(int n)
{
    int j = 0;
    for (j=2; j<=sqrt(n); j++)
    {
        if (n%j==0)
    {
        return 0;
    }
    }
    return 1;
   
}
//是不是闰年
int is_leap_year(int y)
{
    if ((y%4==0&&y%100!=0)||y%400==0) {
    return 1;
    }
    else {
    return 0;
    }
}
//函数实现一个整形有序数组的二分查找
int binary_search(int arr[], int k,int sz)
{
    
    int left = 0;
    int right = sz-1;

    while (left<=right) {
    int mid = (left+right)/2;
    if (arr[mid]>k) {
    right = mid-1;
    }else if (arr[mid]<k) {
    left = mid+1;
    }else {
    return mid;
    }
    }
    return -1;

}

int main()
{   //int a = 7;
    //int b = 20;
    //int max = get_max(a,b);
    //swap(&a,&b);
    //printf("max=%d\n", max);
    //printf("a=%d b=%d",a,b);
    /*int i = 0;
    for (i=2022;i<=2100;i++)
{
    if (is_leap_year(i)==1) {
    printf("%d ",i);
    }
}*/
    int arr[] = {1,2,3,4,5,6,7,8,9,10};
    int k = 7;
    int sz = sizeof(arr)/sizeof(arr[0]);
    int ret = binary_search(arr,k,sz);
    if (ret == -1) {
    printf("找不到");
    }else {
    printf("找到了 下标是%d\n", ret);
    }
    return 0;
}
