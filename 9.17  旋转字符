#include "stdio.h"
#include "string.h"
#include "assert.h"
#include "math.h"

// 旋转字符 

// void left_move(char* arr, int k)
// {
// 	assert(arr);
// 	int i = 0;
// 	int len = strlen(arr);
// 	for (i=0; i<k; i++) 
// 	{
// 		char tmp = *arr;
// 		int j = 0;
// 		for (j=0; j<len-1; j++) 
// 		{
// 			*(arr +j)= *(arr+j+1);
// 		}
// 		*(arr+len-1) = tmp;
// 	}
// }

//优化 三步反转法
void reverse(char* left,char* right)
{
	assert(left!=NULL);
	assert(right!=NULL);
	while (left<right) 
	{
		char tmp = * left;
		*left = *right;
		*right = tmp;
		left++;
		right--;
	}
}
void left_move(char* arr, int k)
{
	assert(arr);
	int len = strlen(arr);
	assert(k<=len);
	
	reverse(arr,arr+k-1);//逆序左
	reverse(arr+k,arr+len-1);//逆序右
	reverse(arr,arr+len-1);//逆序整体
}

// int main()
// {
// 	char arr[] = "abcdef";
// 	left_move(arr, 12);

// 	printf("%s\n", arr);
// }


//判断一个字符是否是旋转来的

// int is_left_move(char* s1,char* s2)
// {
// 	int len = strlen(s1);
// 	int i = 0;
// 	for (i = 0; i<len; i++) 
// 	{
// 		left_move(s1, 1);
// 		int ret = strcmp(s1,s2);
// 		if (ret == 0) {
// 		return 1;
// 		}
// 	}
// 	return 0;
// }
//法二
int is_left_move(char* str1,char* str2)
{
	//字符串追加字符串 strcat不同追加// strncat自己追加自己
	int len1 = strlen(str1);
	int len2 = strlen(str2);
	if (len1 != len2) 
	{
		return 0;
	}
	strncat(str1, str1,len1);
	//strstr找子串
	char* ret = strstr(str1, str2);
	if (ret == NULL)
	{
 		return 0;
 	}else 
	{
		return 1;
	}
}

int main()
{
	char arr1[30] = "abcdef";
	char arr2[] = "cdef";
	int ret = is_left_move(arr1,arr2);
	if (ret == 1) {
	printf("yes\n");
	}else {
	printf("no\n");
	}
	return 0;
}
