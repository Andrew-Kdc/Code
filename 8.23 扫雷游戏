#include <stdio.h>
#include <stdlib.h>
#include <time.h>

#define RO 9
#define CO 9
#define ROW RO+2
#define COL CO+2
#define COUNT 80

void menu()
{
    printf("***********扫雷***********\n");
    printf("*******1.play 0.exit******\n");
    printf("**************************\n");
}

void DisplayBoard(char board[ROW][COL],int row, int col)
{
    int i = 0;
    int j = 0;
    //打印列号
    printf("%c  ", ' ');
    for (i = 1; i<=row; i++) {
    printf("[%d] ", i);
    }
    printf("\n");
    for (i = 1; i<=row; i++) {
        printf("[%d]", i);
        for (j = 1; j<=col; j++) {
            //打印一行数据
        printf(" %c ",board[i][j]);
        if (j<=col-1){
            printf("|");}
        }
        printf("\n");
        //打印分割行
        if (i<=row-1) {
            printf("%c  ", ' ');
            for (j = 1; j<=col; j++) {
            printf("---");
            if(j<=col-1){
                printf("|");}
            }
            printf("\n");
        }
    }
}

void InitBoard(char board[ROW][COL],int row,int col, char set){
    int i = 0;
    int j = 0;
    for (i=0;i<row; i++)
    {
        for (j = 0; j<col; j++)
        {
            board[i][j] = set;
        }
    }
}

void SetMine(char board[ROW][COL],int row,int col){
    int count = COUNT;
    while(count)
    {
        int x = rand() % row+1;
        int y = rand() % col+1;
        if (board[x][y] == '0') 
        {
            board[x][y] = '1';
            count--;
        }
    }
}

int get_mine_count(char mine[ROW][COL],int x,int y)
{
    return mine[x - 1][y] + 
    mine[x - 1][y-1] +
    mine[x][y-1] + 
    mine[x+1][y-1] + 
    mine[x+1][y] + 
    mine[x+1][y+1] + 
    mine[x][y+1] + 
    mine[x-1][y+1] - 8*'0';
}

void FindMine(char mine[ROW][COL],char show[ROW][COL],int row,int col)
{
    int x = 0;
    int y = 0;
    int win = 0;
    while(win<row*col-COUNT)
    {
    printf("请输入排查雷的坐标：\n");
    scanf("%d%d", &x, &y);
    //判断坐标合法性
        if (x>=1 && x<= row && y>=1 && y<=col) 
        {
            if (mine[x][y] == '1') 
            {
                printf("很遗憾，你被炸死了\n");
                DisplayBoard(mine,row,col);
                break;
            }else//不是雷
            {
                //计算周围几个雷
                int count = get_mine_count(mine,x,y);
                show[x][y] = count + '0';
                DisplayBoard(show,RO,CO);
                win++;
            }
        }else {
        printf("坐标非法，请重新输入：\n");
        }
    }
    if (win == row*col-COUNT) {
    printf("恭喜你 排雷成功\n");
    DisplayBoard(mine,RO,CO);
    }
}

void game()
{
    //雷的信息存储
    //1.布置好的雷的信息
    char mine[ROW][COL] = {0};
    //2 排查出雷的信息
    char show[ROW][COL] = {0}; 
    //初始化
    InitBoard(mine,ROW,COL, '0');
    InitBoard(show,ROW,COL, '*');
    //打印棋盘
    DisplayBoard(show,RO,CO);
    //布置雷
    SetMine(mine,RO,CO);
    //DisplayBoard(mine,RO,CO);
    //扫雷
    FindMine(mine, show, RO, CO);
}

void test()
{
    int input = 0;
    srand((unsigned int) time(NULL));
    do {
        menu();
        printf("请选择：");
        scanf("%d", &input);
        switch (input) {
        case 1:
            game();
            break;
        case 0:
            printf("退出游戏\n");
            break;
        default:
            printf("选择错误，请重新选择\n");
            break;   
        }
    }while (input);
}

int main()
{
    test();
    return 0;
}
